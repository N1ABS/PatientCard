@using PatientCard.WebApp.Models.ViewModels
@model IEnumerable<PatientCard.WebApp.Models.Specialty>

@{
    ViewData["Title"] = "Специальность";
}

<h1>Специальности</h1>
<br />

@(Html.Kendo().Grid<SpecialtyViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(p => p.Id).Filterable(false).Width(100);
          columns.Bound(p => p.Name);
          columns.Command(command => { command.Edit().Text("Изменить"); command.Destroy().Text("Удалить"); }).Width(250);
      })
      .Pageable(p => p.Refresh(true))
      .Sortable()
      .ToolBar(toolbar => toolbar.Create().Text("Создать"))
      .Editable(editable =>
      {
          editable.Mode(GridEditMode.PopUp).TemplateName("SpecialtyEditor");
          editable.Window(w => w.Title("Создать/Изменить"));
      })
      .Scrollable()
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(20)
          .Model(model => model.Id(p => p.Id))
          .Create(update => update.Action("SpecialtyCreate", "Specialty"))
          .Read(read => read.Action("SpecialtyRead", "Specialty"))
          .Update(update => update.Action("SpecialtyUpdate", "Specialty"))
          .Destroy(destroy => destroy.Action("SpecialtyDelete", "Specialty"))
      ))